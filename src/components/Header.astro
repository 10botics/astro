---
// Navigation items matching 10botics.com structure exactly
const navItems = [
  { 
    name: '首頁', 
    href: '/',
    children: null
  },
  { 
    name: '最新消息', 
    href: '/news',
    children: null
  },
  { 
    name: '到校服務', 
    href: '#',
    children: [
      { name: '到校課程總覽', href: '/school-courses' },
      { name: 'AI 人工智能', href: '/school-courses/tag/ai' },
      { name: 'Programming 編程', href: '/school-courses/tag/programming' },
      { name: 'Arts 藝術', href: '/school-courses/tag/arts' },
      { name: 'Others 其他', href: '/school-courses/tag/others' },
      { name: 'STEM Day', href: '/Stemday' },
      { name: '教師發展日', href: '/staff-development-day' }
    ]
  },
  { 
    name: '比賽', 
    href: '#',
    children: [
      { name: '第三屆 校際AI藝術創作大賽', href: '/ai-art-competition-2025' },
      { name: '學界無人機救援挑戰賽', href: '/competition-drone2024' },
      { name: 'Minecraft 校園創建計劃2024', href: '/competition-minecraft2024' },
      { name: '香港校際 AI 方程式', href: 'https://formula-ai.racing' },
      { name: '香港航天電競大賽 2022', href: '/competition-ksp2022' },
      { 
        name: '過往比賽', 
        href: '#',
        children: [
          { name: '校際AI藝術創作大賽2024', href: '/ai-art-competition-2024' },
          { name: 'Minecraft 校園創建計劃2023', href: '/competition-minecraft2023' },
          { name: '校際AI藝術創作大賽2023', href: 'https://art.10botics.com' },
          { name: 'Minecraft 校園創建計劃2022', href: '/competition-minecraft2022' },
          { name: 'Minecraft 校園創建計劃2021', href: '/competition-minecraft2021' }
        ]
      },
      { 
        name: '比賽名單', 
        href: '#',
        children: [
          { name: '2024 中小學 STEM 比賽清單', href: '/2024-stem-competition-list' },
          { name: '2025 中小學 STEM 比賽清單', href: '/2025-stem-competition-results' }
        ]
      }
    ]
  },
  { 
    name: '資助申請', 
    href: '#',
    children: [
      { name: '「IT創新實驗室」', href: '/funding-application/it-innovation-lab' },
      { name: '「奇趣it識多啲」', href: '/funding-application/knowing-more-about-it' }
    ]
  },
  { 
    name: '關於我們', 
    href: '#',
    children: [
      { name: '關於我們', href: '/about' },
      { name: '聯絡我們', href: '/contact-us' },
      { name: '加入我們', href: '/join-us' },

    ]
  },
  { 
    name: '線上STEM SHOWROOM', 
    href: '/stem-showroom',
    children: null
  },
  { 
    name: '索取課程總覽', 
    href: 'https://or0uzdua.paperform.co',
    children: null
  }
];

// Critical CSS for header
const headerCriticalCSS = `
  .bg-white { background-color: white; }
  .shadow-sm { box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); }
  .border-b { border-bottom-width: 1px; }
  .border-gray-200 { border-color: #e5e7eb; }
  .relative { position: relative; }
  .max-w-7xl { max-width: 80rem; }
  .mx-auto { margin-left: auto; margin-right: auto; }
  .px-4 { padding-left: 1rem; padding-right: 1rem; }
  .sm\\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .lg\\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .flex { display: flex; }
  .justify-between { justify-content: space-between; }
  .items-center { align-items: center; }
  .h-16 { height: 4rem; }
  .flex-shrink-0 { flex-shrink: 0; }
  .h-8 { height: 2rem; }
  .w-auto { width: auto; }
  .hidden { display: none; }
  .md\\:flex { display: flex; }
  .space-x-8 { margin-left: 0.5rem; margin-right: 0.5rem; }
  .text-gray-700 { color: #374151; }
  .hover\\:text-blue-600:hover { color: #2563eb; }
  .transition-colors { transition-property: color, background-color, border-color, text-decoration-color, fill, stroke; }
  .duration-200 { transition-duration: 200ms; }
  .ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  
  /* Dropdown specific styles */
  .opacity-0 { opacity: 0; }
  .opacity-100 { opacity: 1; }
  .invisible { visibility: hidden; }
  .visible { visibility: visible; }
  .transition-all { transition-property: all; }
  .z-50 { z-index: 50; }
  .absolute { position: absolute; }
  .left-0 { left: 0; }
  .mt-2 { margin-top: 0.5rem; }
  .w-64 { width: 16rem; }
  .bg-white { background-color: white; }
  .rounded-md { border-radius: 0.375rem; }
  .shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
  .border { border-width: 1px; }
  .border-gray-200 { border-color: #e5e7eb; }
  
  @media (min-width: 640px) {
    .sm\\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  }
  @media (min-width: 768px) {
    .md\\:flex { display: flex; }
  }
  @media (min-width: 1024px) {
    .lg\\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  }
`;
---

<header class="bg-white shadow-sm border-b border-gray-200 relative">
  <!-- Critical CSS for header -->
  <style set:html={headerCriticalCSS}></style>
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center">
          <img 
            src="/images/logo_website_700x200-300x86.png" 
            alt="10教育" 
            class="h-8 w-auto"
            width="300"
            height="86"
            loading="eager"
            fetchpriority="high"
          />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-8">
        {navItems.map((item) => (
          <div class="relative" data-dropdown>
            <a 
              href={item.href} 
              class="text-gray-700 hover:text-blue-600 transition-colors duration-200 ease-in-out font-medium cursor-pointer"
              data-dropdown-trigger
            >
              {item.name}
            </a>
            
            {item.children && (
              <div class="absolute left-0 mt-2 w-64 bg-white rounded-md shadow-lg opacity-0 invisible transition-all duration-200 z-50 border border-gray-200" data-dropdown-menu>
                <div class="py-2">
                  {item.children.map((child) => (
                    <div>
                      {child.children ? (
                        // This is a nested dropdown (like "過往比賽")
                        <div class="relative" data-nested-dropdown>
                          <a 
                            href={child.href} 
                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-blue-600 transition-colors duration-200 cursor-pointer"
                            data-nested-trigger
                          >
                            {child.name}
                          </a>
                          <div class="absolute left-full top-0 ml-1 w-64 bg-white rounded-md shadow-lg opacity-0 invisible transition-all duration-200 z-50 border border-gray-200" data-nested-menu>
                            <div class="py-2">
                              {child.children.map((grandchild) => (
                                <a 
                                  href={grandchild.href} 
                                  class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-blue-600 transition-colors duration-200"
                                >
                                  {grandchild.name}
                                </a>
                              ))}
                            </div>
                          </div>
                        </div>
                      ) : (
                        // This is a regular menu item
                        <a 
                          href={child.href} 
                          class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-blue-600 transition-colors duration-200"
                        >
                          {child.name}
                        </a>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        ))}
      </nav>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button 
          type="button" 
          class="text-gray-700 hover:text-blue-600 transition-colors duration-200"
          id="mobile-menu-button"
          aria-label="Toggle mobile menu"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div class="md:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1">
        {navItems.map((item) => (
          <div>
            <a 
              href={item.href} 
              class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors duration-200"
            >
              {item.name}
            </a>
            
            {item.children && (
              <div class="pl-4 space-y-1">
                {item.children.map((child) => (
                  <a 
                    href={child.href} 
                    class="block px-3 py-2 text-sm text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors duration-200"
                  >
                    {child.name}
                  </a>
                ))}
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Desktop Navigation JavaScript -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Desktop dropdown functionality - handle both single and nested dropdowns
      const dropdowns = document.querySelectorAll('[data-dropdown]');
      
      dropdowns.forEach(dropdown => {
        const trigger = dropdown.querySelector('[data-dropdown-trigger]');
        const menu = dropdown.querySelector('[data-dropdown-menu]');
        
        if (!trigger || !menu) return;
        
        // Show dropdown on mouse enter
        dropdown.addEventListener('mouseenter', function() {
          menu.classList.remove('opacity-0', 'invisible');
          menu.classList.add('opacity-100', 'visible');
        });
        
        // Hide dropdown on mouse leave
        dropdown.addEventListener('mouseleave', function() {
          menu.classList.add('opacity-0', 'invisible');
          menu.classList.remove('opacity-100', 'visible');
        });
        
        // Also handle click for better mobile-like experience
        trigger.addEventListener('click', function(e) {
          if (menu) {
            e.preventDefault();
            const isVisible = !menu.classList.contains('invisible');
            
            // Close all other dropdowns
            dropdowns.forEach(otherDropdown => {
              const otherMenu = otherDropdown.querySelector('[data-dropdown-menu]');
              if (otherMenu && otherDropdown !== dropdown) {
                otherMenu.classList.add('opacity-0', 'invisible');
                otherMenu.classList.remove('opacity-100', 'visible');
              }
            });
            
            // Toggle current dropdown
            if (isVisible) {
              menu.classList.add('opacity-0', 'invisible');
              menu.classList.remove('opacity-100', 'visible');
            } else {
              menu.classList.remove('opacity-0', 'invisible');
              menu.classList.add('opacity-100', 'visible');
            }
          }
        });
      });
      
      // Handle nested dropdowns (like "過往比賽" within "比賽")
      const nestedDropdowns = document.querySelectorAll('[data-nested-dropdown]');
      
      nestedDropdowns.forEach(nestedDropdown => {
        const nestedTrigger = nestedDropdown.querySelector('[data-nested-trigger]');
        const nestedMenu = nestedDropdown.querySelector('[data-nested-menu]');
        
        if (!nestedTrigger || !nestedMenu) return;
        
        // Show nested dropdown on mouse enter
        nestedDropdown.addEventListener('mouseenter', function() {
          nestedMenu.classList.remove('opacity-0', 'invisible');
          nestedMenu.classList.add('opacity-100', 'visible');
        });
        
        // Hide nested dropdown on mouse leave
        nestedDropdown.addEventListener('mouseleave', function() {
          nestedMenu.classList.add('opacity-0', 'invisible');
          nestedMenu.classList.remove('opacity-100', 'visible');
        });
        
        // Handle click for nested dropdown
        nestedTrigger.addEventListener('click', function(e) {
          if (nestedMenu) {
            e.preventDefault();
            const isVisible = !nestedMenu.classList.contains('invisible');
            
            // Close all other nested dropdowns
            nestedDropdowns.forEach(otherNested => {
              const otherMenu = otherNested.querySelector('[data-nested-menu]');
              if (otherMenu && otherNested !== nestedDropdown) {
                otherMenu.classList.add('opacity-0', 'invisible');
                otherMenu.classList.remove('opacity-100', 'visible');
              }
            });
            
            // Toggle current nested dropdown
            if (isVisible) {
              nestedMenu.classList.add('opacity-0', 'invisible');
              nestedMenu.classList.remove('opacity-100', 'visible');
            } else {
              nestedMenu.classList.remove('opacity-0', 'invisible');
              nestedMenu.classList.add('opacity-100', 'visible');
            }
          }
        });
      });
      
      // Close dropdowns when clicking outside
      document.addEventListener('click', function(e) {
        if (!(e.target instanceof Element) || !e.target.closest('[data-dropdown]')) {
          dropdowns.forEach(dropdown => {
            const menu = dropdown.querySelector('[data-dropdown-menu]');
            if (menu) {
              menu.classList.add('opacity-0', 'invisible');
              menu.classList.remove('opacity-100', 'visible');
            }
          });
        }
        
        if (!(e.target instanceof Element) || !e.target.closest('[data-nested-dropdown]')) {
          nestedDropdowns.forEach(nestedDropdown => {
            const nestedMenu = nestedDropdown.querySelector('[data-nested-menu]');
            if (nestedMenu) {
              nestedMenu.classList.add('opacity-0', 'invisible');
              nestedMenu.classList.remove('opacity-100', 'visible');
            }
          });
        }
      });
      
      // Mobile menu functionality
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');
      
      if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', function() {
          mobileMenu.classList.toggle('hidden');
        });
      }
    });
  </script>
</header> 