---
// Props for the component
export interface Props {
  currentCourseSlug: string;
  title?: string;
  subtitle?: string;
  maxCourses?: number;
}

const { 
  currentCourseSlug, 
  title = "其他相關課程", 
  subtitle = "探索更多 STEM 及人工智能課程",
  maxCourses = 3 
} = Astro.props;

// Auto-discover .astro course files
const courseFiles = await import.meta.glob('../../pages/school-courses/*.astro', { eager: true });

// Convert .astro files to course data (excluding index and current course)
const courses = Object.entries(courseFiles)
  .filter(([path]) => {
    const filename = path.replace('../../pages/school-courses/', '').replace('.astro', '');
    return !path.includes('index.astro') && filename !== currentCourseSlug;
  })
  .map(([path, module]) => {
    const filename = path.replace('../../pages/school-courses/', '').replace('.astro', '');
    
    // Extract course data from the module if available
    let courseData = {
      title: filename.split('-').map(word => 
        word.charAt(0).toUpperCase() + word.slice(1)
      ).join(' '),
      description: `${filename} 課程`,
      tags: [filename.replace('-', ' ')],
      courseType: extractCourseTypeFromFilename(filename),
      targetAudience: '初中/高中',
      duration: '待定'
    };

    // Try to get course data from the module if it has a courseData export
    if (module && typeof module === 'object' && 'courseData' in module) {
      const moduleData = (module as any).courseData;
      if (moduleData) {
        courseData = {
          ...courseData,
          ...moduleData
        };
      }
    }

    return {
      slug: filename,
      ...courseData
    };
  })
  .slice(0, maxCourses);

function extractCourseTypeFromFilename(filename: string) {
  const typeMapping: Record<string, string> = {
    'ai': 'AI', 'scratch': 'AI', 'arduino': 'Hardware',
    'raspberry': 'Hardware', 'donkey-car': 'Robotics',
    'coral': 'Hardware', 'demo': 'Demo', 'example': 'Demo',
    'ksp': 'Creative', 'unity': 'Programming', 'roblox': 'Programming'
  };
  
  for (const [key, type] of Object.entries(typeMapping)) {
    if (filename.toLowerCase().includes(key)) return type;
  }
  return 'Other';
}
---

{courses.length > 0 && (
  <section class="bg-gray-50 py-16">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">{title}</h2>
          <p class="text-lg text-gray-600">{subtitle}</p>
        </div>
        
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {courses.map((course) => (
            <article class="bg-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group">
              <div class="p-6">
                <!-- Course Header -->
                <div class="mb-4">
                  <h3 class="text-xl font-bold mb-2 text-gray-800 line-clamp-2">
                    <a href={`/school-courses/${course.slug}`} 
                       class="hover:text-blue-600 transition-colors group-hover:text-blue-600">
                      {course.title}
                    </a>
                  </h3>
                  
                  {course.description && (
                    <p class="text-gray-600 text-sm line-clamp-3 mb-4">
                      {course.description}
                    </p>
                  )}
                </div>
                
                <!-- Course Meta -->
                <div class="space-y-2 mb-4">
                  {course.targetAudience && (
                    <div class="flex items-center text-sm text-gray-600">
                      <i class="fas fa-user-graduate text-blue-500 mr-2"></i>
                      <span>{course.targetAudience}</span>
                    </div>
                  )}
                  
                  {course.duration && (
                    <div class="flex items-center text-sm text-gray-600">
                      <i class="fas fa-clock text-green-500 mr-2"></i>
                      <span>{course.duration}</span>
                    </div>
                  )}
                  
                  {course.courseType && (
                    <div class="flex items-center text-sm text-gray-600">
                      <i class="fas fa-tag text-purple-500 mr-2"></i>
                      <span>{course.courseType}</span>
                    </div>
                  )}
                </div>
                
                <!-- Tags -->
                {course.tags && course.tags.length > 0 && (
                  <div class="flex flex-wrap gap-1 mb-4">
                    {course.tags.slice(0, 3).map((tag) => (
                      <span class="bg-blue-100 text-blue-700 px-2 py-1 rounded text-xs">
                        {tag}
                      </span>
                    ))}
                    {course.tags.length > 3 && (
                      <span class="text-gray-500 text-xs px-2 py-1">
                        +{course.tags.length - 3} more
                      </span>
                    )}
                  </div>
                )}
                
                <!-- Action Button -->
                <div class="mt-auto">
                  <a href={`/school-courses/${course.slug}`}
                     class="inline-block w-full text-center bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors text-sm font-medium group-hover:bg-blue-700">
                    查看課程詳情
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
        
        <!-- View All Courses Button -->
        <div class="text-center mt-8">
          <a href="/school-courses" 
             class="inline-block bg-gray-800 text-white px-6 py-3 rounded-lg hover:bg-gray-900 transition-colors font-medium">
            查看所有課程
          </a>
        </div>
      </div>
    </div>
  </section>
)}

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 