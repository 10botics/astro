---
// Feature List Component for bullet point features
export interface FeatureItem {
  text: string;
  icon?: string; // Optional icon class or emoji
}

export interface Props {
  title: string;
  description?: string;
  features: FeatureItem[];
  backgroundColor?: string;
}

const { title, description, features, backgroundColor = "bg-gray-50" } = Astro.props;
---

<section class={`py-16 ${backgroundColor}`}>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
        {title}
      </h2>
      {description && (
        <p class="text-lg text-gray-600 max-w-3xl mx-auto">
          {description}
        </p>
      )}
    </div>

    <div class="bg-white rounded-lg shadow-lg p-8 md:p-12">
      <ul class="space-y-6">
        {features.map((feature) => (
          <li class="flex items-start">
            <div class="flex-shrink-0">
              {feature.icon ? (
                <span class="text-2xl mr-4">{feature.icon}</span>
              ) : (
                <div class="w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center mr-4 mt-1">
                  <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                </div>
              )}
            </div>
            <div class="flex-1">
              <p class="text-lg text-gray-700 leading-relaxed">
                {feature.text}
              </p>
            </div>
          </li>
        ))}
      </ul>
    </div>
  </div>
</section> 