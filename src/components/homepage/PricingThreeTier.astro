---
// Three-tier pricing section - Tailwind UI pattern
export interface Props {
  title: string;
  subtitle: string;
  description: string;
  tiers: Array<{
    name: string;
    price: string;
    duration: string;
    description: string;
    features: string[];
    ctaText: string;
    ctaLink: string;
    popular?: boolean;
  }>;
}

const { title, subtitle, description, tiers } = Astro.props;
---

<section class="bg-white py-24 sm:py-32">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-4xl text-center">
      <h2 class="text-base font-semibold leading-7 text-blue-600">{subtitle}</h2>
      <p class="mt-2 text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl">{title}</p>
    </div>
    <p class="mx-auto mt-6 max-w-2xl text-center text-lg leading-8 text-gray-600">{description}</p>
    
    <div class="isolate mx-auto mt-16 grid max-w-md grid-cols-1 gap-y-8 sm:mt-20 lg:mx-0 lg:max-w-none lg:grid-cols-3">
      {tiers.map((tier, tierIdx) => (
        <div class={`flex flex-col justify-between rounded-3xl bg-white p-8 ring-1 ring-gray-200 xl:p-10 ${tier.popular ? 'lg:z-10 lg:rounded-b-none' : tierIdx === 0 ? 'lg:rounded-r-none' : 'lg:rounded-l-none'} ${tier.popular ? 'ring-2 ring-blue-600' : ''}`}>
          <div>
            <div class="flex items-center justify-between gap-x-4">
              <h3 class={`text-lg font-semibold leading-8 ${tier.popular ? 'text-blue-600' : 'text-gray-900'}`}>{tier.name}</h3>
              {tier.popular && (
                <p class="rounded-full bg-blue-600/10 px-2.5 py-1 text-xs font-semibold leading-5 text-blue-600">Most popular</p>
              )}
            </div>
            <p class="mt-4 text-sm leading-6 text-gray-600">{tier.description}</p>
            <p class="mt-6 flex items-baseline gap-x-1">
              <span class="text-4xl font-bold tracking-tight text-gray-900">{tier.price}</span>
              <span class="text-sm font-semibold leading-6 text-gray-600">/{tier.duration}</span>
            </p>
            <ul role="list" class="mt-8 space-y-3 text-sm leading-6 text-gray-600">
              {tier.features.map((feature) => (
                <li class="flex gap-x-3">
                  <svg class="h-6 w-5 flex-none text-blue-600" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z" clip-rule="evenodd" />
                  </svg>
                  {feature}
                </li>
              ))}
            </ul>
          </div>
          <a href={tier.ctaLink} class={`mt-8 block rounded-md px-3.5 py-2 text-center text-sm font-semibold leading-6 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 transition-colors ${tier.popular ? 'bg-blue-600 text-white shadow-sm hover:bg-blue-500 focus-visible:outline-blue-600' : 'text-blue-600 ring-1 ring-inset ring-blue-200 hover:ring-blue-300'}`}>
            {tier.ctaText}
          </a>
        </div>
      ))}
    </div>
  </div>
</section> 