---
// Handle legacy WordPress-style URLs with date structure like /2021/12/09/...
// This is a catch-all for any 2021 dated URLs

import { getCollection } from 'astro:content';

// Get all news articles to create a mapping
const newsArticles = await getCollection('news');

// Create a mapping of date patterns to news article slugs
const dateToSlugMapping: Record<string, string> = {};
newsArticles.forEach(article => {
  const publishDate = new Date(article.data.publishDate);
  const year = publishDate.getFullYear().toString();
  const month = (publishDate.getMonth() + 1).toString().padStart(2, '0');
  const day = publishDate.getDate().toString().padStart(2, '0');
  
  if (year === '2021') {
    const dateKey = `${month}/${day}`;
    dateToSlugMapping[dateKey] = article.slug;
  }
});

// For static generation, we can't predict all possible paths, so we'll handle common ones
export async function getStaticPaths() {
  return [
    // 2021 date paths from sitemap
    { params: { path: '12/09/lte2021-donkeycar' } }
  ];
}

const { path } = Astro.params;

// Extract date from path (MM/DD format)
const dateMatch = path?.match(/^(\d{2})\/(\d{2})\//);
if (dateMatch) {
  const month = dateMatch[1];
  const day = dateMatch[2];
  const dateKey = `${month}/${day}`;
  
  // Check if we have a matching news article for this date
  if (dateToSlugMapping[dateKey]) {
    return Astro.redirect(`/news/${encodeURIComponent(dateToSlugMapping[dateKey])}`);
  }
}

// Default redirect to news index for any other 2021 URLs
return Astro.redirect('/news');
---

<!-- This file should never render content as it only handles redirects -->
