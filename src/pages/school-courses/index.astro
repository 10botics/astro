---
import Layout from '../../layouts/Layout.astro';

// No content collection courses for now
const contentCourses: any[] = [];

// Auto-discover .astro course files
const courseFiles = await import.meta.glob('./*.astro', { eager: true });

// Convert .astro files to course data (excluding index and dynamic routes)
const astroCourses = Object.entries(courseFiles)
  .filter(([path]) => !path.includes('./index.astro') && !path.includes('./[slug].astro'))
  .map(([path, module]: [string, any]) => {
    const filename = path.replace('./', '').replace('.astro', '');
    
    // Map Chinese filenames to English URLs
    const slugMapping: Record<string, string> = {
      '人工智能遊戲編程課程': 'ai-game-coding',
      'AI數位動畫展覽課程': 'ai-digital-animation-exhibition',
      '組件演示課程': 'component-demo',
      'Coral通用示例課程': 'coral-generalized-example',
      'CoSpaces虛擬實境課程': 'cospaces',
      '通用示例課程': 'generalized-example',
      'ksp太空計劃課程': 'ksp',
      'Minecraft編程課程': 'minecraft',
      'Procreate數位藝術課程': 'procreate',
      'raspberry-pi編程課程': 'raspberry-pi',
      'ScratchAI編程課程': 'scratch-ai-programming',
      'Scratch遊戲設計課程': 'scratch-game-design',
      'SwiftPlaygrounds編程課程': 'swiftplaygrounds',
      'Tello無人機編程課程': 'tello'
    };
    
    // Map filenames to actual course titles and descriptions
    const courseDataMapping: Record<string, { title: string; description: string; tags: string[] }> = {
      '人工智能遊戲編程課程': {
        title: '人工智能遊戲編程課程',
        description: '本課程將教授學生如何使用人工智能輔助開發網頁遊戲。學生將學習使用 HTML、CSS 和 JavaScript 製作網頁遊戲，並透過 Poe 和 Repl.it 等 AI 工具簡化開發流程。',
        tags: ['Programming 編程', 'AI 人工智能', '初中', '高中', '遊戲開發', '網頁遊戲']
      },
      'raspberry-pi編程課程': {
        title: 'Raspberry Pi 編程課程',
        description: 'Raspberry Pi 是一個廣泛應用於各種領域的單板電腦。課程旨在幫助學生掌握 Raspberry Pi 及 Python 編程的基礎知識，以致配合機器學習和人工智慧，進行人體姿態檢測。',
        tags: ['AI 人工智能', 'Coral', 'Python', 'Raspberry Pi', 'Tensorflow', '初中', '高中']
      },
      'AI數位動畫展覽課程': {
        title: 'AI數碼動畫展',
        description: 'AI數碼動畫展是一個簡單有趣的 STEM Day 活動，學生可按主題設計喜歡的圖案/角色，通過人工智能把圖案轉換成栩栩如生的動畫，呈現在學校LED Wall或螢幕上面跳舞，讓學生能以輕鬆有趣的方式體驗生成式AI技術。',
        tags: ['AI 人工智能', '動畫', '創意', '藝術', 'STEM']
      },
      '組件演示課程': {
        title: '組件演示課程',
        description: '組件演示課程描述',
        tags: ['演示', '組件']
      },
      'Coral通用示例課程': {
        title: 'Coral通用示例課程',
        description: 'Coral通用示例課程描述',
        tags: ['Coral', 'AI 人工智能']
      },
      'CoSpaces虛擬實境課程': {
        title: 'CoSpaces虛擬實境課程',
        description: 'CoSpaces虛擬實境課程描述',
        tags: ['VR', '虛擬實境', '創意']
      },
      '通用示例課程': {
        title: '通用示例課程',
        description: '通用示例課程描述',
        tags: ['示例', '通用']
      },
      'ksp太空計劃課程': {
        title: 'Kerbal Space Program (KSP) 太空任務設計課程',
        description: '通過 KSP 模擬太空任務和探索宇宙，學生將進入迷人的太空科學世界，學習如何建構火箭，並掌握引力、推進力和運動力學等重要概念。透過模擬真實的太空環境和挑戰，他們將學習如何計劃和執行成功的發射任務，激發學員的創造力和探索精神，培養解決問題和團隊合作的能力。',
        tags: ['Engineering 工程', 'KSP', 'Science 科學', '初中', '遊戲開發', '高中', '高小']
      },
      'Minecraft編程課程': {
        title: 'Minecraft編程課程',
        description: 'Minecraft編程課程描述',
        tags: ['Minecraft', '遊戲', '編程']
      },
      'Procreate數位藝術課程': {
        title: 'Procreate電繪課程',
        description: '從介紹Procreate界面和工具開始，課程幫助學生並探索Procreate繪畫技巧、色彩應用。學習分層、合併元素，提高創作效率和繪製並匯出多種畫作。',
        tags: ['Arts 藝術', 'Procreate', '數位藝術', '創意', '繪畫']
      },
      'ScratchAI編程課程': {
        title: 'ScratchAI編程課程',
        description: 'ScratchAI編程課程描述',
        tags: ['Scratch', 'AI 人工智能', '編程']
      },
      'Scratch遊戲設計課程': {
        title: 'Scratch遊戲設計課程',
        description: 'Scratch遊戲設計課程描述',
        tags: ['Scratch', '遊戲設計', '編程']
      },
      'SwiftPlaygrounds編程課程': {
        title: 'Swift Playgrounds 初階編程',
        description: '這個課程將帶領學生透過 Swift Playgrounds 學習編寫一個飛機大戰遊戲。學生將學會基礎編程概念、創建圖像元素、動畫設計和碰撞檢測等技巧，最終完成一個功能完整的飛機大戰遊戲。課程將通過互動式編程、示範和實踐來實現學習效果。',
        tags: ['Programming 編程', 'Swift Playground', '初中', '軟件開發', '遊戲開發', '高中']
      },
      'Tello無人機編程課程': {
        title: 'Tello無人機編程課程',
        description: 'Tello無人機編程課程描述',
        tags: ['無人機', 'Tello', '編程']
      }
    };
    
    // Get course data from mapping or use defaults
    const courseData = courseDataMapping[filename] || {
      title: filename,
      description: `${filename} 課程頁面`,
      tags: [filename.replace('-', ' ')]
    };
    
    const courseTitle = courseData.title;
    const courseDescription = courseData.description;
    const courseTags = courseData.tags;
    const courseTargetAudience = '待定';
    const courseDuration = '待定';
    
    return {
      slug: slugMapping[filename] || filename,
      filename: `${filename}.astro`,
      title: courseTitle,
      description: courseDescription,
      courseType: extractCourseTypeFromFilename(filename),
      targetAudience: courseTargetAudience,
      duration: courseDuration,
      tags: courseTags,
      publishDate: new Date().toISOString().split('T')[0],
      source: 'astro'
    };
  });

// Convert content collection courses to same format
const mdCourses = contentCourses.map(course => ({
  slug: course.slug,
  filename: `${course.slug}.md`,
  title: course.data.title,
  description: course.data.description,
  courseType: course.data.courseType || 'Other',
  targetAudience: course.data.targetAudience || '待定',
  duration: course.data.duration || '待定',
  tags: course.data.tags || [],
  publishDate: course.data.publishDate,
  source: 'markdown'
}));

// Combine both sources (prefer .astro if same slug exists)
const allCourses = [...mdCourses, ...astroCourses];
const courses = allCourses.filter((course, index, self) => 
  index === self.findIndex(c => c.slug === course.slug)
);

function extractCourseTypeFromFilename(filename: string): string {
  const typeMapping: Record<string, string> = {
    'ai': 'AI', 'scratch': 'AI', 'arduino': 'Hardware',
    'raspberry': 'Hardware', 'donkey-car': 'Robotics',
    'coral': 'Hardware', 'demo': 'Demo', 'example': 'Demo',
    'ksp': 'Creative', 'unity': 'Programming', 'roblox': 'Programming'
  };
  
  for (const [key, type] of Object.entries(typeMapping)) {
    if (filename.toLowerCase().includes(key)) return type;
  }
  return 'Other';
}

// Sort courses by publication date (newest first)
const sortedCourses = courses.sort((a, b) => 
  new Date(b.publishDate).getTime() - new Date(a.publishDate).getTime()
);

// SEO optimized page data
const pageTitle = "課程總覽 - 10教育STEM及AI課程";
const pageDescription = `瀏覽我們完整的STEM及人工智能課程目錄，包括Scratch AI編程、機器人技術、Arduino硬件編程等專業到校課程。共${courses.length}個課程，適合不同年齡學生。`;
const pageKeywords = "STEM課程總覽, AI課程列表, 編程課程, 機器人課程, Scratch編程, Arduino, 到校課程, 10教育";
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  keywords={pageKeywords}
  ogImage="/images/og/courses-overview.jpg"
>
  <main class="courses-index">
    <!-- Header -->
    <header class="bg-gradient-to-r from-blue-600 to-purple-600 text-white py-16">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-5xl font-bold mb-6">課程總覽</h1>
          <p class="text-xl opacity-90 mb-8">
            探索我們的 STEM 及人工智能課程，為學生提供最前沿的技術教育
          </p>
          <div class="text-sm opacity-80">
            共 {courses.length} 個課程 (混合式發現: {mdCourses.length} 個 .md + {astroCourses.length} 個 .astro)
          </div>
          <div class="text-xs opacity-70 mt-2">
            發現的檔案: {courses.map(c => c.filename).join(', ')}
          </div>
        </div>
      </div>
    </header>

    <!-- All Courses -->
    <section class="py-16">
      <div class="container mx-auto px-4">
        <div class="max-w-6xl mx-auto">
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {sortedCourses.map((course) => (
              <article class="course-card bg-white rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300 overflow-hidden">
                <div class="p-6">
                  <!-- Course Header -->
                  <div class="mb-4">
                    <h3 class="text-xl font-bold mb-2 text-gray-800 line-clamp-2">
                      <a href={`/school-courses/${course.slug}`} 
                         class="hover:text-blue-600 transition-colors">
                        {course.title}
                      </a>
                    </h3>
                    
                    {course.description && (
                      <p class="text-gray-600 text-sm line-clamp-3 mb-4">
                        {course.description}
                      </p>
                    )}
                    
                    <!-- Debug info -->
                    <div class="text-xs text-gray-400 mb-2">
                      {course.source === 'markdown' ? '📄' : '⚡'} {course.filename} | 類型: {course.courseType}
                    </div>
                  </div>
                  
                  <!-- Course Meta -->
                  <div class="space-y-2 mb-4">
                    {course.targetAudience && (
                      <div class="flex items-center text-sm text-gray-600">
                        <span class="font-medium">適合:</span>
                        <span class="ml-2">{course.targetAudience}</span>
                      </div>
                    )}
                    
                    {course.duration && (
                      <div class="flex items-center text-sm text-gray-600">
                        <span class="font-medium">時長:</span>
                        <span class="ml-2">{course.duration}</span>
                      </div>
                    )}
                    
                    <div class="flex items-center text-sm text-gray-600">
                      <span class="font-medium">發布:</span>
                      <span class="ml-2">
                        {new Date(course.publishDate).toLocaleDateString('zh-HK')}
                      </span>
                    </div>
                  </div>
                  
                  <!-- Tags -->
                  <div class="flex flex-wrap gap-1 mb-4">
                    {course.tags.slice(0, 3).map((tag: string) => (
                      <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                        {tag}
                      </span>
                    ))}
                    {course.tags.length > 3 && (
                      <span class="text-gray-500 text-xs px-2 py-1">
                        +{course.tags.length - 3} more
                      </span>
                    )}
                  </div>
                  
                  <!-- Action Button -->
                  <div class="mt-auto">
                    <a href={`/school-courses/${course.slug}`}
                       class="inline-block w-full text-center bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors text-sm font-medium">
                      查看課程詳情
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .course-card {
    min-height: 350px;
    display: flex;
    flex-direction: column;
  }
  
  .course-card > div {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
</style> 